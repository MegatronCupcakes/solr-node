{
  "name": "Solr-node",
  "tagline": "Simple Solr Node Client Project",
  "body": "# solr-node\r\n\r\nSimple Solr Node Client Project\r\n\r\n[![NPM](https://nodei.co/npm/solr-node.png?downloads=true&stars=true)](https://nodei.co/npm/solr-node/)\r\n\r\n## Install\r\n\r\n```\r\nnpm install solr-node\r\n```\r\n\r\n## Usage\r\n- Client: http://www.godong9.com/solrnode/Client.html\r\n- Query: http://www.godong9.com/solrnode/Query.html\r\n\r\n### Create Client\r\n\r\n```js\r\n// Require module\r\nvar SolrNode = require('solr-node');\r\n\r\n// Create client\r\nvar client = new SolrNode({\r\n    host: '127.0.0.1',\r\n    port: '8983',\r\n    core: 'test',\r\n    protocol: 'http'\r\n});\r\n\r\n// Set Debug Level\r\nvar client = new SolrNode({\r\n    host: '127.0.0.1',\r\n    port: '8983',\r\n    core: 'test',\r\n    protocol: 'http',\r\n    debugLevel: 'ERROR' // log4js debug level paramter\r\n});\r\n```\r\n\r\n### Search\r\n\r\nSearch can be executed with a simple text query or an object query.\r\n\r\n#### Text\r\n\r\nText queries are similar to what one would find on the SOLR Core UI, EX:\r\n\r\nFrom the URL: `http://localhost:8080/solr/products/select?q=*%3A*&wt=json`\r\n\r\nThe Query would be:\r\n\r\n```\r\n*:*&wt=json\r\n```\r\n\r\nNOTE: url decoded ':' from `%3A`.\r\n\r\n#### Object\r\n\r\nObject based queries can be simple or complex using chaining. Each method of the Query object returns an instance of itself.\r\n\r\nExamples:\r\n\r\nSimple:\r\n\r\n```\r\nclient.query().q({text:'test', title:'test'});\r\n```\r\n\r\nComplex and chained:\r\n\r\n```\r\nclient.query()\r\n    .q({text:'test', title:'test'})\r\n    .addParams({\r\n        wt: 'json',\r\n        indent: true\r\n    })\r\n    .start(1)\r\n    .rows(1)\r\n;\r\n```\r\n\r\n### Query Examples\r\n\r\n```js\r\n// Create query\r\nvar strQuery = client.query().q('text:test');\r\nvar objQuery = client.query().q({text:'test', title:'test'});\r\nvar myStrQuery = 'q=text:test&wt=json';\r\n\r\n// Search documents using strQuery\r\nsolrClient.search(strQuery, function (err, result) {\r\n   if (err) {\r\n      console.log(err);\r\n      return;\r\n   }\r\n   console.log('Response:', result.response);\r\n});\r\n\r\n// Search documents using objQuery\r\nsolrClient.search(objQuery, function (err, result) {\r\n   if (err) {\r\n      console.log(err);\r\n      return;\r\n   }\r\n   console.log('Response:', result.response);\r\n});\r\n\r\n// Search documents using myStrQuery\r\nsolrClient.search(myStrQuery, function (err, result) {\r\n   if (err) {\r\n      console.log(err);\r\n      return;\r\n   }\r\n   console.log('Response:', result.response);\r\n});\r\n\r\n```\r\n\r\n### Update\r\n\r\n```js\r\n// JSON Data\r\nvar data = {\r\n    text: 'test',\r\n    title: 'test'\r\n};\r\n\r\n// Update document to Solr server\r\nclient.update(data, function(err, result) {\r\n   if (err) {\r\n      console.log(err);\r\n      return;\r\n   }\r\n   console.log('Response:', result.responseHeader);\r\n});\r\n\r\n```\r\n\r\n### Delete\r\n\r\n```js\r\n// Delete Query\r\nvar strQuery = 'id:testid'\r\nvar objQuery = {id:'testid'}\r\n\r\n// Delete document using strQuery\r\nclient.delete(strQuery, function(err, result) {\r\n   if (err) {\r\n      console.log(err);\r\n      return;\r\n   }\r\n   console.log('Response:', result.responseHeader);\r\n});\r\n\r\n// Delete document using objQuery\r\nclient.delete(objQuery, function(err, result) {\r\n   if (err) {\r\n      console.log(err);\r\n      return;\r\n   }\r\n   console.log('Response:', result.responseHeader);\r\n});\r\n\r\n```\r\n\r\n## Test & Coverage & Docs\r\n\r\n```js\r\ngulp\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}